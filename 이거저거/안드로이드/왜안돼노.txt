record.startRecording();

                    timerTask = new TimerTask() {
                        @Override
                        public void run() {
                            // Classifying audio data
                            // val numberOfSamples = tensor.load(record)
                            // val output = classifier.classify(tensor)
                            int numberOfSamples = tensor.load(record);
                            List<Classifications> output = classifier.classify(tensor);

                            // Filtering out classifications with low probability
                            List<Category> finalOutput = new ArrayList<>();
                            for (Classifications classifications : output) {
                                for (Category category : classifications.getCategories()) {
                                    if (category.getScore() > probabilityThreshold) {
                                        finalOutput.add(category);
                                    }
                                }
                            }

                            // Sorting the results
                            Collections.sort(finalOutput, (o1, o2) -> (int) (o1.getScore() - o2.getScore()));

                            // Creating a multiline string with the filtered results
                            StringBuilder outputStr = new StringBuilder();
                            for (Category category : finalOutput) {
                                outputStr.append(category.getLabel())
                                        .append(": ").append(category.getScore()).append("\n");
                            }
                            String s1 = outputStr.toString();
                            if(s1.contains("Alarm")) {
                                timerTask.cancel();
                                record.stop();
                            }

                /*
                // Updating the UI
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        if (finalOutput.isEmpty()) {
                            outputTextView.setText("Could not classify");
                        } else {
                            outputTextView.setText(outputStr.toString());
                        }
                    }
                });
                */


                        }
                    };

                    new Timer().scheduleAtFixedRate(timerTask, 1, 500);